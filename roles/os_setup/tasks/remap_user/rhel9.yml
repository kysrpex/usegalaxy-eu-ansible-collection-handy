---
# In Rocky9 uses GID 999 and UID 999
# both of which we need to map to the galaxy user and group.


- name: Get all groups
  getent:
    database: group
    split: ':'

- name: Get all users
  getent:
    database: passwd
    split: ':'

- name: Remap GID 999 if Galaxy group is not present
  block:
  - name: Check for GID 999 group
    ansible.builtin.shell:
      cmd: grep 999 /etc/group | cut -d ':' -f1,2 | sed 's/$/:500/'
    ignore_errors: true
    register: check_group
    changed_when: false

  - name: Print return information from the previous task
    ansible.builtin.debug:
      var: check_group
    when: debug

  - name: Replace in group file
    ansible.builtin.lineinfile:
      path: /etc/group
      regexp: ':x:999:'
      line: check_group.stdout
      validate: /usr/sbin/pwck %s
    when: (not ansible_check_mode and check_group.rc == 0)

  - name: Search and replace 999 group files
    ansible.builtin.shell:
      cmd: "find / -mount -gid 999 -exec chgrp 500 '{}' +"
    ignore_errors: true
    when: check_group.rc == 0
    tags:
      - ignore_errors
  when: (not "galaxy" in getent_group.keys())

- name: Remap UID 999 if Galaxy user is not present
  block:
  - name: Check for UID 999 in user file
    ansible.builtin.shell: 
      cmd: grep 999 /etc/passwd | cut -d ':' -f1,2 | sed 's/$/:500/'
    ignore_errors: true
    register: check_user
    changed_when: false

  - name: Print return information from the previous task2
    ansible.builtin.debug:
      var: check_user
    when: debug

  - name: Replace in passwd file
    ansible.builtin.replace:
      path: /etc/passwd
      regexp: '999'
      replace: "500"
      validate: /usr/sbin/pwck %s
    when: (not ansible_check_mode and check_user.rc == 0)

  - name: Search and replace 999 user files
    ansible.builtin.shell: 
      cmd: "find / -mount -uid 999 -exec chown 500 '{}' +"
    ignore_errors: true
    when: check_user.rc == 0
    tags:
      - ignore_errors
  when: (not "galaxy" in getent_passwd.keys())
